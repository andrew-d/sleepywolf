package main

const gatherTemplate = `
// DO NOT EDIT!!!
// This code was generated by github.com/andrew-d/sleepywolf

package main

import (
	"os"

	"github.com/andrew-d/sleepywolf/gather"

	// This is the package we're introspecting
	"{{.ImportPath}}"
)

{{$pn := .PackageName}}

func main() {
	g := gather.NewInfoGatherer()
{{range .StructNames}}
	g.Register("{{.}}", &{{$pn}}.{{.}}{})
{{end}}
	g.Run(os.Stdout)
}
`

const finalTemplate = `
// This code was generated by github.com/andrew-d/sleepywolf

package {{.PackageName}}

import (
	"net/http"

	"github.com/zenazn/goji/web"
)

{{define "BeforeFunc"}}
	{{with .}}
		{{if .Params | eq 3}}
		if !self.{{.Name}}(c, w, r) { return }
		{{else}}
		if !self.{{.Name}}(w, r) { return }
		{{end}}
	{{end}}
{{end}}

{{$prefix := .UrlPrefix}}

{{range .Structs}}
func (self *{{.StructName}}) RegisterOn(mux *web.Mux) {
	{{$struct := .}}

	{{range .Handlers}}
		handlerFor{{.Name}} := func(c web.C, w http.ResponseWriter, r *http.Request) {
			{{if HasBeforeType .Name "BeforeAll"}}{{template "BeforeFunc" $struct.BeforeAll}}{{end}}
			{{if HasBeforeType .Name "BeforeAll"}}{{template "BeforeFunc" $struct.BeforeOne}}{{end}}
			{{if HasBeforeType .Name "BeforeAll"}}{{template "BeforeFunc" $struct.BeforeMany}}{{end}}

			{{if .Params | eq 3}}
				self.{{.Name}}(c, w, r)
			{{else}}
				self.{{.Name}}(w, r)
			{{end}}
		}
		mux.{{RegisterFuncFor .Name}}("{{$prefix}}/{{UrlFor $struct.StructName .Name}}", handlerFor{{.Name}})
	{{end}}
}
{{end}}
`
